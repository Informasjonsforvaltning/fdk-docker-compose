version: "3"

services:

  ### Shared services - databases + sso
  ####################################

  elasticsearch5:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    expose:
      - "9200"
      - "9300"
    environment:
      - cluster.name
      - xpack.security.enabled

  fuseki:
    image: dcatno/fuseki:latest
    volumes:
      - fuseki-data:/etc/fuseki/databases/
    expose:
      - "8080"

  postgres:
    image: postgres:11.2
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - "5432"

  sso:
    image: dcatno/sso:latest
    expose:
      - "8084"
    environment:
      - KEYCLOAK_USER
      - KEYCLOAK_PASSWORD
      - IDPORTEN_CLIENT_ID
      - IDPORTEN_CLIENT_SECRET
      # if SSO_HOST and IDPORTEN_OIDC are on the same host, then deploy mock setup is deployed
      - IDPORTEN_OIDC_ROOT
      - SSO_HOST
      - REGISTRATION_HOST
      - CONCEPT_CATALOGUE_HOST

  ### ingress modules
  ##################################

  nginx-search:
    image: dcatno/nginx-search:latest
    expose:
      - "8080"
    depends_on:
      - search
      - search-api
      - harvester-api
      - api-cat
      - concept-cat
      - informationmodel-cat

  nginx-registration:
    image: dcatno/nginx-registration:latest
    expose:
      - "8080"
    depends_on:
      - registration-react
      - registration-api
      - reference-data
      - search-api
      - api-cat
      - concept-cat

  ### external service proxies
  ##################################

  nginx-altinn-proxy:
    image: dcatno/nginx-altinn-proxy:latest
    expose:
      - "8080"
    environment:
      - ALTINN_HOST
      - ALTINN_API_KEY
      - ALTINN_SSL_BR_CRT_PEM
      - ALTINN_SSL_BR_KEY_PEM

  nginx-enhetsregisteret-proxy:
    image: dcatno/nginx-enhetsregisteret-proxy
    expose:
      - "8080"

  ### nodejs services
  ####################################

  search:
    image: dcatno/search:latest
    expose:
      - "3000"
    environment:
      - NODE_ENV
      - DISQUS_SHORTNAME

  registration-react:
    image: dcatno/registration-react:latest
    expose:
      - "4300"
    environment:
      - NODE_ENV
      - REGISTRATION_LANGUAGE
      - SEARCH_HOST
      - REFERENCE_DATA_HOST
      - SSO_HOST

  ### java services
  #############################

  api-cat:
    image: dcatno/api-cat:latest
    expose:
      - "8080"
    depends_on:
      - elasticsearch5
      - reference-data
      - search-api

  concept-cat:
    image: dcatno/concept-cat:latest
    expose:
      - "8080"

  informationmodel-cat:
    image: dcatno/informationmodel-cat:latest
    expose:
      - "8080"

  harvester:
    image: dcatno/harvester:latest
    expose:
      - "8080"
    depends_on:
      - fuseki
      - harvester-api

  harvester-api:
    image: dcatno/harvester-api:latest
    expose:
      - "8080"
    depends_on:
      - fuseki
      - elasticsearch5
      - reference-data

  registration-api:
    image: dcatno/registration-api:latest
    expose:
      - "8080"
    depends_on:
      - elasticsearch5
      - reference-data
      - registration-auth
      - api-cat

  reference-data:
    image: dcatno/reference-data:latest
    expose:
      - "8080"
    depends_on:
      - postgres

  search-api:
    image: dcatno/search-api:latest
    expose:
      - "8080"
    depends_on:
      - elasticsearch5

  user-api:
    image: dcatno/user-api:latest
    expose:
      - "8080"
    depends_on:
      - nginx-altinn-proxy
    environment:
      - ALTINN_PROXY_HOST

  ### Concept catalog
  ###########################

  concept-catalogue:
    image: dcatno/concept-catalogue:latest
    expose:
      - "8080"
    depends_on:
      - postgres

  concept-catalogue-gui:
    image: dcatno/concept-catalogue-gui:latest
    expose:
      - "3111"

  ### test and mock modules
  ###########################

  nginx-altinn-proxy-mock:
    build: dcatno/nginx-altinn-proxy-mock:latest
    expose:
      - "8080"

  nginx-enhetsregisteret-proxy-mock:
    build: dcatno/nginx-enhetsregisteret-proxy-mock:latest
    expose:
      - "8080"

  registration-auth:
    image: dcatno/registration-auth:latest
    expose:
      - "8080"

  # TODO this is not a service, does not need to be always started, implement as "run" command instead
  e2e:
    image: dcatno/e2e:latest
    volumes:
      - ./applications/e2e/test:/usr/src/app/test:rw

volumes:
  fuseki-data:
  elasticsearch-data:
